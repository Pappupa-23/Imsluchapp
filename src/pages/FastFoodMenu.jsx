import "./FastFoodMenu.css";
import { useState } from "react";

function FastFoodMenu({ addToCart }) {
  const fastFoods = [
    { name: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡πÉ‡∏à", price: 85, image: "/‡πÄ‡∏ö‡∏≠‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡πÉ‡∏à.jpg" },
    { name: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏´‡∏°‡∏π", price: 80, image: "/‡πÄ‡∏ö‡∏≠‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏´‡∏°‡∏π.jpg" },
    { name: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÑ‡∏Å‡πà", price: 80, image: "/‡πÄ‡∏ö‡∏≠‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÑ‡∏Å‡πà.jpg" },
    { name: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤+‡∏ä‡∏µ‡∏™", price: 120, image: "/‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤+‡∏ä‡∏µ‡∏™.jpg" },
    { name: "‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡∏Æ‡∏≤‡∏ß‡∏≤‡πÄ‡∏≠‡∏µ‡πâ‡∏¢‡∏ô", price: 155, image: "/‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤.jpg" },
    { name: "‡πÄ‡∏Å‡∏µ‡πä‡∏¢‡∏ß‡∏ã‡πà‡∏≤‡∏ó‡∏≠‡∏î", price: 80, image: "/‡πÄ‡∏Å‡∏µ‡πä‡∏¢‡∏ß‡∏ã‡πà‡∏≤‡∏ó‡∏≠‡∏î.jpg" },
    { name: "‡∏ä‡∏µ‡∏™‡∏ö‡∏≠‡∏•", price: 75, image: "/‡∏ä‡∏µ‡∏™‡∏ö‡∏≠‡∏•.jpg" },
    { name: "‡πÄ‡∏ü‡∏£‡∏ô‡∏ã‡πå‡∏ü‡∏£‡∏≤‡∏¢‡∏ä‡∏µ‡∏™", price: 75, image: "/‡πÄ‡∏ü‡∏£‡∏ô‡∏ã‡πå‡∏ü‡∏£‡∏≤‡∏¢‡∏ä‡∏µ‡∏™.jpg" },
    { name: "‡πÑ‡∏Å‡πà‡∏™‡∏ï‡∏¥‡πä‡∏Å", price: 60, image: "/‡πÑ‡∏Å‡πà‡∏™‡∏ï‡∏¥‡πä‡∏Å.jpg" },
    { name: "‡∏Æ‡∏≠‡∏ó‡∏î‡πá‡∏≠‡∏Å‡πÄ‡∏ö‡∏Ñ‡∏≠‡∏ô", price: 85, image: "/‡∏Æ‡∏≠‡∏ó‡∏î‡πá‡∏≠‡∏Å‡πÄ‡∏ö‡∏Ñ‡∏≠‡∏ô.jpg" },
    { name: "‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡πÇ‡∏ó‡∏™‡∏ï‡πå", price: 55, image: "/‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡πÇ‡∏ó‡∏™‡∏ï‡πå.jpg" },
  ];

  const [selectedFood, setSelectedFood] = useState(null);
  const [addons, setAddons] = useState({
    meat: [],
    topping: [],
    vegetable: [],
    sauce: [],
    pizzaOption: [], // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤
    note: "",
  });
  const [alertMessage, setAlertMessage] = useState("");

  const handleSelect = (type, value) => {
    if (type === "note") {
      setAddons((prev) => ({ ...prev, note: value }));
      return;
    }

    if (["meat", "topping", "vegetable", "sauce", "pizzaOption"].includes(type)) {
      setAddons((prev) => {
        const exists = prev[type].some((m) => m.name === value.name);
        return exists
          ? { ...prev, [type]: prev[type].filter((m) => m.name !== value.name) }
          : { ...prev, [type]: [...prev[type], value] };
      });
    }
  };

  const calculateTotalPrice = () => {
    if (!selectedFood) return 0;
    let total = selectedFood.price;
    ["meat", "topping", "vegetable", "sauce"].forEach((type) => {
      total += addons[type].reduce((sum, m) => sum + m.price, 0);
    });
    return total;
  };

  const handleAddToCart = () => {
    if (!selectedFood) return;

    if (selectedFood.name === "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡πÉ‡∏à") {
      if (
        addons.meat.length === 0 ||
        addons.topping.length === 0 ||
        addons.vegetable.length === 0
      ) {
        setAlertMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î üçî \n (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå,‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á,‡∏ú‡∏±‡∏Å,‡∏ã‡∏≠‡∏™) ");
        return;
      }
    }

    const totalAddOn =
      addons.meat.reduce((sum, m) => sum + m.price, 0) +
      addons.topping.reduce((sum, m) => sum + m.price, 0) +
      addons.vegetable.reduce((sum, m) => sum + m.price, 0) +
      addons.sauce.reduce((sum, m) => sum + m.price, 0);

    const item = {
      id: Date.now() + Math.random(),
      ...selectedFood,
      price: selectedFood.price + totalAddOn,
      addons,
    };

    addToCart(item);
    closePopup();
  };

  const openPopup = (food) => {
    setSelectedFood(food);
    setAddons({
      meat: [],
      topping: [],
      vegetable: [],
      sauce: [],
      pizzaOption: [],
      note: "",
    });
    setAlertMessage("");
  };

  const closePopup = () => {
    setSelectedFood(null);
    setAlertMessage("");
  };

  const burgerNames = [
    "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡πÉ‡∏à",
    "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏´‡∏°‡∏π",
    "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÑ‡∏Å‡πà",
    "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤+‡∏ä‡∏µ‡∏™",
  ];

  return (
    <div className="menu-section">
      <h2>üçî ‡∏ü‡∏≤‡∏™‡∏ï‡πå‡∏ü‡∏π‡πâ‡∏î</h2>

      <div className="menu-grid">
        {fastFoods.map((food) => (
          <div key={food.name} className="menu-card">
            {food.image && <img src={food.image} alt={food.name} />}
            <div className="menu-details">
              <h3>{food.name}</h3>
              <p>{food.price} ‡∏ö‡∏≤‡∏ó</p>
              <button onClick={() => openPopup(food)}>‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</button>
            </div>
          </div>
        ))}
      </div>

      {selectedFood && (
        <div className="popup-overlay">
          <div className="popup-content">
            <h3>{selectedFood.name}</h3>
            <p className="selected-price">‡∏ø {calculateTotalPrice()}</p>

            {/* ‚úÖ ‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡∏Æ‡∏≤‡∏ß‡∏≤‡πÄ‡∏≠‡∏µ‡πâ‡∏¢‡∏ô */}
            {selectedFood.name === "‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡∏Æ‡∏≤‡∏ß‡∏≤‡πÄ‡∏≠‡∏µ‡πâ‡∏¢‡∏ô" && (
              <div className="addon-group">
                <h4>‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h4>
                {[
                  { name: "‡∏õ‡∏Å‡∏ï‡∏¥", price: 0 },
                  { name: "‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏≤‡∏™‡∏±‡∏õ‡∏õ‡∏∞‡∏£‡∏î", price: 0 },
                  { name: "‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏≤‡πÅ‡∏Æ‡∏°", price: 0 },
                ].map((opt) => (
                  <label key={opt.name}>
                    <input
                      type="checkbox"
                      checked={addons.pizzaOption.some((m) => m.name === opt.name)}
                      onChange={() => handleSelect("pizzaOption", opt)}
                    />
                    {opt.name}
                  </label>
                ))}
              </div>
            )}

            {/* ‚úÖ ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå */}
            {burgerNames.includes(selectedFood.name) && (
              <>
                {selectedFood.name === "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡πÉ‡∏à" && (
                  <div className="addon-group">
                    <h4 className="required">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå *</h4>
                    {[{ name: " ‡∏´‡∏°‡∏π", price: 25 },
                      { name: " ‡πÑ‡∏Å‡πà", price: 25 },
                      { name: " ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠", price: 35 },
                      { name: " ‡∏õ‡∏•‡∏≤", price: 30 }].map((opt) => (
                      <label key={opt.name}>
                        <input
                          type="checkbox"
                          checked={addons.meat.some((m) => m.name === opt.name)}
                          onChange={() => handleSelect("meat", opt)}
                        />
                        {opt.name} +{opt.price}‡∏ø
                      </label>
                    ))}
                  </div>
                )}

                <div className="addon-group">
                  <h4>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á</h4>
                  {[{ name: " ‡∏°‡∏≠‡∏™‡∏ã‡πà‡∏≤‡πÄ‡∏£‡∏•‡∏•‡πà‡∏≤‡∏ä‡∏µ‡∏™", price: 20 },
                    { name: " ‡πÄ‡∏ä‡∏î‡∏î‡πâ‡∏≤‡∏ä‡∏µ‡∏™", price: 15 },
                    { name: " ‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß", price: 15 },
                    { name: " ‡πÄ‡∏ö‡∏Ñ‡∏≠‡∏ô", price: 25 },
                    { name: " ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà", price: 0 }].map((opt) => (
                    <label key={opt.name}>
                      <input
                        type="checkbox"
                        checked={addons.topping.some((m) => m.name === opt.name)}
                        onChange={() => handleSelect("topping", opt)}
                      />
                      {opt.name} {opt.price > 0 ? `+${opt.price}‡∏ø` : ""}
                    </label>
                  ))}
                </div>

                <div className="addon-group">
                  <h4>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏±‡∏Å</h4>
                  {[{ name: " ‡∏õ‡∏Å‡∏ï‡∏¥", price: 0 },
                    { name: " ‡πÑ‡∏°‡πà‡∏ú‡∏±‡∏Å‡πÄ‡∏•‡∏¢", price: 0 },
                    { name: " ‡πÑ‡∏°‡πà‡∏°‡∏∞‡πÄ‡∏Ç‡∏∑‡∏≠‡πÄ‡∏ó‡∏®", price: 0 },
                    { name: " ‡πÑ‡∏°‡πà‡∏Å‡∏∞‡∏´‡∏•‡πà‡∏≥‡∏õ‡∏•‡∏µ‡∏ã‡∏≠‡∏¢", price: 0 },
                    { name: " ‡πÑ‡∏°‡πà‡∏ú‡∏±‡∏Å‡∏Å‡∏≤‡∏î‡∏´‡∏≠‡∏°", price: 0 },
                    { name: " ‡πÑ‡∏°‡πà‡πÅ‡∏ï‡∏á‡∏Å‡∏ß‡∏≤", price: 0 }].map((opt) => (
                    <label key={opt.name}>
                      <input
                        type="checkbox"
                        checked={addons.vegetable.some((m) => m.name === opt.name)}
                        onChange={() => handleSelect("vegetable", opt)}
                      />
                      {opt.name}
                    </label>
                  ))}
                </div>

                <div className="addon-group">
                  <h4>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏≠‡∏™</h4>
                  {[{ name: " ‡∏ã‡∏≠‡∏™‡∏°‡∏∞‡πÄ‡∏Ç‡∏∑‡∏≠‡πÄ‡∏ó‡∏®", price: 0 },
                    { name: " ‡∏ã‡∏≠‡∏™‡∏û‡∏£‡∏¥‡∏Å", price: 0 },
                    { name: " ‡∏°‡∏≤‡∏¢‡∏≠‡∏á‡πÄ‡∏ô‡∏™", price: 0 },
                    { name: " ‡∏°‡∏±‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏î", price: 0 },
                    { name: " ‡∏ã‡∏≠‡∏™‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏°‡∏∞‡πÄ‡∏Ç‡∏∑‡∏≠‡πÄ‡∏ó‡∏® + ‡∏û‡∏£‡∏¥‡∏Å + ‡∏°‡∏≤‡∏¢‡∏≠‡∏á‡πÄ‡∏ô‡∏™)", price: 0 }].map((opt) => (
                    <label key={opt.name}>
                      <input
                        type="checkbox"
                        checked={addons.sauce.some((m) => m.name === opt.name)}
                        onChange={() => handleSelect("sauce", opt)}
                      />
                      {opt.name}
                    </label>
                  ))}
                </div>
              </>
            )}

            <div className="addon-group">
              <h4>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h4>
              <textarea
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°..."
                value={addons.note}
                onChange={(e) => handleSelect("note", e.target.value)}
                rows="3"
              />
            </div>

            <div className="popup-buttons">
              <button className="btn btn-confirm" onClick={handleAddToCart}>
                ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏™‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
              </button>
              <button className="btn btn-cancel" onClick={closePopup}>
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
            </div>
          </div>
        </div>
      )}

      {alertMessage && (
        <div className="popup-overlay popup-overlay--alert">
          <div className="popup-content popup-content--alert">
            <h3>‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö</h3>
            <p>{alertMessage}</p>
            <button className="btn btn-ok" onClick={() => setAlertMessage("")}>
              ‡∏ï‡∏Å‡∏•‡∏á
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default FastFoodMenu;
